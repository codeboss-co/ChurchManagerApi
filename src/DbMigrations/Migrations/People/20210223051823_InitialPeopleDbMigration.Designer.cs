// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using People.Infrastructure.Persistence;

namespace DbMigrations.Migrations.People
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20210223051823_InitialPeopleDbMigration")]
    partial class InitialPeopleDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("People.Persistence.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Family", "People");
                });

            modelBuilder.Entity("People.Persistence.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgeClassification")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AnniversaryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("integer");

                    b.Property<string>("CommunicationPreference")
                        .HasColumnType("text");

                    b.Property<string>("ConnectionStatus")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FirstVisitDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<Guid?>("GivingGroupId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsEmailActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.Property<string>("UserLoginId")
                        .HasColumnType("text");

                    b.Property<int?>("ViewedCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Person", "People");
                });

            modelBuilder.Entity("People.Persistence.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<bool>("IsMessagingEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnlisted")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumber", "People");
                });

            modelBuilder.Entity("People.Persistence.Models.Person", b =>
                {
                    b.HasOne("People.Persistence.Models.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyId");

                    b.OwnsOne("People.Persistence.Models.BirthDate", "BirthDate", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int?>("BirthDay")
                                .HasColumnType("integer");

                            b1.Property<int?>("BirthMonth")
                                .HasColumnType("integer");

                            b1.Property<int?>("BirthYear")
                                .HasColumnType("integer");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("People.Persistence.Models.DeceasedStatus", "DeceasedStatus", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime?>("DeceasedDate")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("IsDeceased")
                                .HasColumnType("boolean");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("People.Persistence.Models.FullName", "FullName", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .HasColumnType("text");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("text");

                            b1.Property<string>("NickName")
                                .HasColumnType("text");

                            b1.Property<string>("Suffix")
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .HasColumnType("text");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("BirthDate");

                    b.Navigation("DeceasedStatus");

                    b.Navigation("Family");

                    b.Navigation("FullName");
                });

            modelBuilder.Entity("People.Persistence.Models.PhoneNumber", b =>
                {
                    b.HasOne("People.Persistence.Models.Person", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("People.Persistence.Models.Family", b =>
                {
                    b.Navigation("FamilyMembers");
                });

            modelBuilder.Entity("People.Persistence.Models.Person", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
