// <auto-generated />
using System;
using ChurchManager.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChurchManager.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ChurchManagerDbContext))]
    [Migration("20210316194549_InitialDbMigration")]
    partial class InitialDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ChurchManager.Persistence.Models.Churches.Church", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("ChurchGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LeaderPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChurchGroupId");

                    b.ToTable("Church", "Churches");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Churches.ChurchGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LeaderPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChurchGroup", "Churches");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ChurchId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("GroupCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("GroupTypeId");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("Group", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AttendanceCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("DidNotOccur")
                        .HasColumnType("boolean");

                    b.Property<int?>("FirstTimerCount")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int?>("NewConvertCount")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("ReceivedHolySpiritCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupAttendance", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CommunicationPreference")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupMemberRoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("GroupMemberRoleId");

                    b.HasIndex("PersonId");

                    b.ToTable("GroupMember", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupMemberAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("DidAttend")
                        .HasColumnType("boolean");

                    b.Property<int?>("GroupAttendanceId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupMemberId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsFirstTime")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsNewConvert")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool?>("ReceivedHolySpirit")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GroupAttendanceId");

                    b.HasIndex("GroupId");

                    b.HasIndex("GroupMemberId");

                    b.ToTable("GroupMemberAttendance", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupMemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("GroupMemberRole", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("GroupMemberTerm")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("GroupTerm")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("TakesAttendance")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("GroupType", "Groups");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Family", "People");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgeClassification")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AnniversaryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("integer");

                    b.Property<string>("CommunicationPreference")
                        .HasColumnType("text");

                    b.Property<string>("ConnectionStatus")
                        .HasColumnType("text");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FirstVisitDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<Guid?>("GivingGroupId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InactiveDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("Occupation")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<bool?>("ReceivedHolySpirit")
                        .HasColumnType("boolean");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("UserLoginId")
                        .HasColumnType("text");

                    b.Property<int?>("ViewedCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.HasIndex("FamilyId");

                    b.ToTable("Person", "People");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<bool>("IsMessagingEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnlisted")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumber", "People");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Churches.Church", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Churches.ChurchGroup", "ChurchGroup")
                        .WithMany("Churches")
                        .HasForeignKey("ChurchGroupId");

                    b.Navigation("ChurchGroup");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.Group", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Churches.Church", "Church")
                        .WithMany()
                        .HasForeignKey("ChurchId");

                    b.HasOne("ChurchManager.Persistence.Models.Groups.GroupType", "GroupType")
                        .WithMany()
                        .HasForeignKey("GroupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurchManager.Persistence.Models.Groups.Group", "ParentGroup")
                        .WithMany("Groups")
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("Church");

                    b.Navigation("GroupType");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupAttendance", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Groups.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupMember", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Groups.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurchManager.Persistence.Models.Groups.GroupMemberRole", "GroupMemberRole")
                        .WithMany()
                        .HasForeignKey("GroupMemberRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurchManager.Persistence.Models.People.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ChurchManager.Persistence.Models.Groups.ArchiveStatus", "ArchiveStatus", b1 =>
                        {
                            b1.Property<int>("GroupMemberId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime?>("ArchivedDateTime")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("IsArchived")
                                .HasColumnType("boolean");

                            b1.HasKey("GroupMemberId");

                            b1.ToTable("GroupMember");

                            b1.WithOwner()
                                .HasForeignKey("GroupMemberId");
                        });

                    b.Navigation("ArchiveStatus");

                    b.Navigation("Group");

                    b.Navigation("GroupMemberRole");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupMemberAttendance", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Groups.GroupAttendance", null)
                        .WithMany("Attendees")
                        .HasForeignKey("GroupAttendanceId");

                    b.HasOne("ChurchManager.Persistence.Models.Groups.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurchManager.Persistence.Models.Groups.GroupMember", "GroupMember")
                        .WithMany()
                        .HasForeignKey("GroupMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("GroupMember");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.Person", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.Churches.Church", "Church")
                        .WithMany()
                        .HasForeignKey("ChurchId");

                    b.HasOne("ChurchManager.Persistence.Models.People.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyId");

                    b.OwnsOne("ChurchManager.Persistence.Models.People.Baptism", "BaptismStatus", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime?>("BaptismDate")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("IsBaptised")
                                .HasColumnType("boolean");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("ChurchManager.Persistence.Models.People.BirthDate", "BirthDate", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int?>("BirthDay")
                                .HasColumnType("integer");

                            b1.Property<int?>("BirthMonth")
                                .HasColumnType("integer");

                            b1.Property<int?>("BirthYear")
                                .HasColumnType("integer");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("ChurchManager.Persistence.Models.People.DeceasedStatus", "DeceasedStatus", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime?>("DeceasedDate")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("IsDeceased")
                                .HasColumnType("boolean");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("ChurchManager.Persistence.Models.People.Email", "Email", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Address")
                                .HasColumnType("text");

                            b1.Property<bool?>("IsActive")
                                .HasColumnType("boolean");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("ChurchManager.Persistence.Models.People.FullName", "FullName", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .HasColumnType("text");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("text");

                            b1.Property<string>("NickName")
                                .HasColumnType("text");

                            b1.Property<string>("Suffix")
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .HasColumnType("text");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("BaptismStatus");

                    b.Navigation("BirthDate");

                    b.Navigation("Church");

                    b.Navigation("DeceasedStatus");

                    b.Navigation("Email");

                    b.Navigation("Family");

                    b.Navigation("FullName");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.PhoneNumber", b =>
                {
                    b.HasOne("ChurchManager.Persistence.Models.People.Person", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Churches.ChurchGroup", b =>
                {
                    b.Navigation("Churches");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.Group", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.Groups.GroupAttendance", b =>
                {
                    b.Navigation("Attendees");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.Family", b =>
                {
                    b.Navigation("FamilyMembers");
                });

            modelBuilder.Entity("ChurchManager.Persistence.Models.People.Person", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
