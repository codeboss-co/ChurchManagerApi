name: deploy
concurrency: 'deploy'

on:
  push:
    branches:
      - release

  workflow_dispatch:

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
        - name: üõí Checkout
          uses: actions/checkout@v2

        - name: ‚öôÔ∏è Set env to Test
          if: endsWith(github.ref, '/develop') ||  endsWith(github.ref, '/release')
          run: |
            echo "ENVIRONMENT=Test" >> $GITHUB_ENV

        - name: ‚öôÔ∏è Set env to Production
          if: endsWith(github.ref, '/master')
          run: |
            echo "ENVIRONMENT=Test" >> $GITHUB_ENV          

        - name: ‚öôÔ∏è Set current date
          id: date
          run: echo "::set-output name=date::$(date +'%Y%m%d')"

        - name: ‚öôÔ∏è Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: üõ†Ô∏è Update BuildInfo version
          id: build-info
          env:
              VERSION: ${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ env.ENVIRONMENT }}
          run: |
              printf '{"version":"%s"}' $VERSION > ./buildinfo.json
              cat ./buildinfo.json # just some logging
          working-directory: ./src/ChurchManager.Api/ChurchManager.Api
                    
        - name: üõ†Ô∏è Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: üõ†Ô∏è Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
            IMAGE_TAG: ${{ steps.date.outputs.date }}-${{ github.run_number }}
          run: |
            # Build & push a docker container to ECR.
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            echo "::set-output name=tag::$IMAGE_TAG"

        - name:  ‚è≠ Deploy to Jelastic
          uses: fjogeleit/http-request-action@master
          with:
            url: https://app.paas.mamazala.com/1.0/environment/control/rest/redeploycontainers?envName=docker&session=2390be464b054389842b82aa0a9d4b8ab9914208&tag=${{ steps.build-image.outputs.tag }}&nodeGroup=cp
            method: 'POST'


