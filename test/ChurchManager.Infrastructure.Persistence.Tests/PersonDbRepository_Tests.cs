using ChurchManager.Domain.Features.People.Queries;
using ChurchManager.Infrastructure.Persistence.Contexts;
using ChurchManager.Infrastructure.Persistence.Repositories;
using ChurchManager.Infrastructure.Persistence.Tests.Helpers;
using Microsoft.EntityFrameworkCore;
using Xunit;
using Xunit.Abstractions;

namespace ChurchManager.Infrastructure.Persistence.Tests
{
    public class PersonDbRepository_Tests
    {
        private readonly DbContextOptions<ChurchManagerDbContext> _options =
            new DbContextOptionsBuilder<ChurchManagerDbContext>()
                .UseNpgsql("Server=localhost;Port=5432;Database=churchmanager_db;User Id=admin;password=P455word1;")
                //.UseLoggerFactory(_loggerFactory) //Optional, this logs SQL generated by EF Core to the Console
                .Options;

        private readonly ITestOutputHelper _output;

        public PersonDbRepository_Tests(ITestOutputHelper output)
        {
            _output = output;
        }

        [Fact]
        public async Task Should_find_matching_people()
        {
            using (var dbContext = new ChurchManagerDbContext(_options, new LocalTenantProvider(), null))
            {
                var dbRepository = new PersonDbRepository(dbContext);

                var query = new PersonMatchQuery("Dillan", "Cagnetta", "dillancagnetta@yahoo.com", null);

                var results = await dbRepository.FindPersons(query).ToListAsync();

                Assert.NotEmpty(results);
            }
        }
    }
}